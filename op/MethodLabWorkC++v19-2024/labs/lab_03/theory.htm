<html>
<head>
<title>Untitled Document</title>
<meta http-equiv="Content-Type" content="text/html; charset=windows-1251">
<link rel="stylesheet" type="text/css" href="../../style.css">
</head>

<body>
<a name="top"></a>
<h1><b>3. Циклічні обчислювальні процеси</b>
</h1>
<em>Мета  роботи:</em>
<ol>
  <li>
    Вивчити особливості циклічних обчислювальних процесів
  </li>
  <li>
    Опанувати технологію використання операторів циклів
  </li>
  <li>
    Навчитися розробляти алгоритми та програми циклічних процесів
  </li>
</ol>
<h2>3.1. Теоретичні відомості</h2>
<p>Алгоритмічна конструкція, що дозволяє виконавцеві алгоритму повторювати певну послідовність дій задану кількість разів, називається конструкцією повторення або циклічною. Кожне виконання операторів тіла циклу супроводжується перевіркою умови повторення циклу і називається його ітерацією. Якщо умова повторення істинна, то тіло циклу виконується ще раз, якщо хибна, то виконання циклу припиняється і здійснюється перехід до виконання наступного за циклом оператора. Змінні, значення яких модифікуються в тілі циклу і впливають на істинність умови повторення, називаються параметрами циклу. Виконанню будь-якого циклу має передувати ініціалізація його параметрів. У мовах С/С++ є три різновиди операторів циклу: оператор циклу з передумовою, оператор циклу з постумовою та оператор циклу з лічильником</p>
<h3><span style="color: #00C">3.1.1. Цикл із передумовою</span><br>
</h3>
<p>У циклі з передумовою  перша перевірка умови продовження циклу відбувається ще до першого виконання  його тіла. Це означає, що за деяких значень параметрів циклу його тіло може не  виконатися жодного разу. Цей тип&nbsp; циклу  застосовують лише у тому випадку, коли кількість повторень є невідомою до  початку виконання циклу Синтаксис оператора циклу з передумовою:<br>
  <span class="light">while</span> (&lt;умова продовження  циклу&gt;)<br>
&nbsp;&nbsp; &lt;оператор&gt;;<br>
Тут <span class="light">while</span> (&lt;умова продовження циклу&gt;) є заголовком циклу, &lt;оператор&gt; &mdash; його тілом. Тіло циклу може бути операторним  блоком і містити в собі будь-які оператори: циклу, вибору, присвоєння тощо.  Умова продовження циклу повинна бути виразом булевого типу.</p>
<p><br>
</p>
<h3 style="color: #00C">3.1.2. Цикл із постумовою</h3>
<p>Як і цикл із передумовою, <em>цикл із постумовою</em> застосовують тоді, коли кількість&nbsp; ітерацій циклу є невідомою до початку його  виконання. Умова продовження циклу з постумовою записується після тіла циклу та  вперше перевіряється після виконання операторів тіла. Цикл з постумовою за  будь-яких обставин буде виконано принаймні один раз. Синтаксис оператора циклу  з постумовою такий:<br>
<span class="light">do</span> { &lt;оператор1;&gt; ...  &lt;операторN;&gt; } <span class="light">while</span> ( &lt;умова повторення циклу&gt; );</p>
Тут  <span class="light">do</span>, <span class="light">while</span> &mdash;  зарезервовані слова, &lt;оператор1&gt;;...&lt;операторN&gt;; &mdash; тіло циклу; &lt;умова повторення циклу&gt; &mdash;  деякий булів вираз.<br>
<br>
<br>
<h3 style="color: #00C">3.1.3. Цикл із лічильником</h3>
<p>Відстежити істинність  умови повторення циклу дозволяє спеціальний різновид параметра циклу, <em>лічильник ітераці</em>й. Лічильник &mdash; це змінна, що під час кожного  повторення збільшується на одиницю. В операторі <em>циклу з лічильником</em>&nbsp;облік числа  виконаних ітерацій вказується у заголовку, і тому цей оператор є зручною формою  запису циклів із наперед визначеною кількістю повторень. Синтаксис оператора  циклу з лічильником такий.<br>
  <span class="light">for</span> ([&lt;вираз1&gt;];  [&lt;вираз2&gt;];[&lt;вираз3&gt;] )<br>
&nbsp;&nbsp;&nbsp;&nbsp; &lt;оператор;&gt;</p>
Тут  <span class="light">for</span> &mdash;  зарезервоване слово (&laquo;для&raquo;); &lt;вираз1&gt;  &nbsp;ініціалізує лічильник та виконується один раз на початку циклу; &lt;вираз2&gt;&nbsp;&mdash;  деякий булів вираз, котрий визначає умову повторення циклу; &lt;вираз3&gt;  &nbsp;змінює значення лічильника циклу, найчастіше це просто операція  інкремента чи декремента; &lt;оператор&gt; &mdash;  простий або складений оператор, що є тілом циклу. Фраза <span class="light">for</span>() є  заголовком циклу, а зазначений після круглих дужок оператор &mdash; тілом циклу.  Найчастіше &lt;вираз1&gt;  &nbsp;записують у вигляді &lt;лічильник&gt;=&lt;початкове  значення&gt;; &lt;вираз2&gt;&nbsp;є  виразом відношення (&lt;, &gt;, &lt;=, &gt;=, !=, ==), в якому  порівнюються поточне та кінцеве значення лічильника. Початкове та кінцеве  значення лічильника &mdash; це вирази того самого перелічуваного типу; лічильник &mdash; це  змінна перелічуваного типу, що є узгодженим за присвоюванням з типом  початкового та кінцевого значення.
<p><br>
  
</p>
<h3><span style="color: #00C">3.1.4. Переривання та продовження циклу </span><br>
</h3>
<p>У деяких програмах  виникає потреба завершити цикл або його ітерацію передчасно. У мовах С/С++  цього ефекту можна досягти, використовуючи оператори <span class="light">break</span> та <span class="light">continue</span>.<br>
  Передчасний вихід із  циклу означає, що умова повторення циклу під час виходу з нього є істинною. Для  примусового переривання циклу&nbsp;слід  виконати оператор <span class="light">break</span>. Оператор <span class="light">continue</span>&nbsp;здійснює  пропуск усіх інструкцій, записаних після його виклику в тілі циклу. Таким  чином, після виконання оператора <span class="light">continue</span> завжди перевіряється умова продовження циклу.<br>
Якщо використовуються  вкладені цикли, то оператор <span class="light">break</span> перериває той цикл, у якому він виконується. Після переривання  внутрішнього циклу управління передається заголовку зовнішнього циклу для  перевірки умови його продовження. Аналогічно працює і оператор <span class="light">continue</span>: його виконання забезпечує дії нової ітерації  того циклу, в якому цей оператор здійснено.</p>
<p><a href="#top">Вверх</a></p>
</body>
</html>