<html>
<head>
<title>Untitled Document</title>
<meta http-equiv="Content-Type" content="text/html; charset=windows-1251">
<link rel="stylesheet" type="text/css" href="../../style.css">
</head>

<body>
<a name="top"></a>
<h1><b>5. Рекурсивні функції</b>
</h1>
<em>Мета  роботи:</em>
<ol>
  <li>
    Вивчити особливості рекурсивних процесів 
  </li>
  <li>
    Опанувати технологію рекурсивних обчислень
  </li>
  <li>
    Навчитися розробляти алгоритми та програми із застосуванням рекурсивних функцій 
  </li>
</ol>
<h2>5.1. Теоретичні відомості</h2>
<p>Означення називається  рекурсивним, якщо воно задає елементи множини за допомогою інших елементів цієї  самої множини. Об' єкти, що задані рекурсивним означенням, також називаються 
 рекурсивними. Під терміном &quot;рекурсивно задана функція&quot; розуміється  така функція, значення якої для данноrо apгумента обчислюється за допомогою  значень для попередніх apгументов. 
При кожній конкретній реалізації процес  обчислення такої функції задається <strong>рекурентною  послідовністю</strong>. У практиці обчислень це пов'язано з тим, що, маючи справу з  реальною функцією, 
ми не обчислюємо її в реальному завданні на усій числовій  осі, а обчислюємо для деякої кінцевої послідовності значень apгументов. <br>
<p>Рекурсія &mdash; це такий  спосіб організації обчислювального процесу, за якого функція звертається сама  до себе. Такі звернення називаються <strong>рекурсивними викликами,</strong> 
а функція,  що містить рекурсивні виклики, &mdash; <strong>рекурсивною</strong>.<br>
Перед  тим, як записати рекурсивну функцію будь-якою мовою програмування, необхідно  записати рекурентне співвідношення, що визначає метод обчислення функцій.  
Рекурентне співвідношення повинне містити як мінімум дві умови: </p>
<ul>
  <li>умову продовження рекурсії (крок рекурсії);</li>
  <li>умову закінчення рекурсії.</li>
</ul>
<p>Розглянемо функцію T(n), де аргумент n&nbsp;є цілим додатним  числом, таким, що n<img src="pictures/t1.gif" width="9" height="10" />0&nbsp;або n<img src="pictures/t1.gif" width="9" height="10" />1. 
Потрібно обчислити значення членів послідовності <img src="pictures/t2.gif" width="59" height="15" />.&nbsp;Рекурсивне завдання  послідовності <img src="pictures/t3.gif" width="11" height="13" />&nbsp;
як послідовності  значень функції T(n)&nbsp;включає такі два  етапи. </p>
<ul>
  <li>Функція T(n)&nbsp;задається  безпосередньо у вигляді числових значень для деякої конечної множини початкових  значень аргументу 1<img src="pictures/t4.gif" width="9" height="10" />n<img src="pictures/t4.gif" width="9" height="10" />m.</li>
  <li>Задається  метод або формула, які дозволяють, знаючи усі значення функції T(n) при n<img src="pictures/t4.gif" width="9" height="10" />k, k<img src="pictures/t1.gif" width="9" height="10" />m, обчислити її значення при n=k+1 , тобто знайти T(k+1).</li>
</ul>
<p>В результаті отримуємо  peкуррентні співвідношення, що описують рекурсивно задану функцію T(n), рівносильну послідовності <img src="pictures/t3.gif" width="11" height="13" />&nbsp;. <br>
  Отриманий запис цих двох  етапів<br>
  <p><img src="pictures/t5.gif" width="246" height="44" /><br>
  називається  <strong>рекурентним співвідношенням</strong>. <br>
  <p>Рекурсію  реалізовують за допомогою виклику функції самої себе. При цьому в тілі функції  спочатку слід перевіряти умову продовження рекурсії. Якщо вона істинна, то  виходити з функції. Інакше здійснювати рекурсивний крок. <br>
  <p>В рекурсивних  підпрограмах можна виділити два процеси: <strong>рекурсивне  занурення</strong> підпрограми у себе, що відбувається доти, доки  параметр не сягне граничного значення, та 
  <strong>рекурсивне  повернення</strong> з підпрограми, що відбувається доти, доки параметр не сягне початкового значення.  Рекурсія реалізує нескінченний цикл, отже застосовувати її слід тільки у  випадках, коли&nbsp; без неї неможливо  обійтися.<br>
 <p> Розглянемо рекурсивну  функцію, що обчислює <em>n</em>-й член послідовності чисел Фібоначчі. Ці числа  визначаються рекурентним співвідношенням:<br>
  <img src="pictures/t6.gif" width="167" height="69" />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <br>
  <br>
  Програмний код, що  реалізує рекурсивні обчислення, такий: </p>
<span class="light">int</span> Fib(<span class="light">int</span> n)<br>
{<br>
&nbsp; <span class="light">if</span> (n == 0) <span class="light">return</span>&nbsp;0;<br>
&nbsp; <span class="light">else if</span> (n == 1)<span class="light"> return</span> 1;<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <span class="light">else return</span> Fib(n&ndash;1)+Fib(n&ndash;2);<br>
}
<p><a href="#top">Вверх</a></p>
</body>
</html>